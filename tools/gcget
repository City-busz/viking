#!/usr/bin/env python

#
# gcget -- screen scrape Geocaching.com's annoying web interface
# 	   aka SHOW ME THE CACHE!!!
#
# Copyright 2007, Evan Battaglia
# Distributed under the terms of the GPS v2.
#
#
# requires module mechanize
#

USER="username"
PASS="password"

# docs needed!
# this has some extra args in:
# gcget lat,lon maxnumgcs [maxdist] [threshold]
# threshold -- if find more than this # of geocaches, don't get ANY,
# instead give warning and quit

import sys
ll = sys.argv[1].split(",")
lat = ll[0]
lon = ll[1]

if len(sys.argv) >= 4:
  maxdist = sys.argv[3]
else:
  maxdist = "999"
if len(sys.argv) >= 5:
  threshold = int(sys.argv[4])
else:
  threshold = 1000000;

# rounds up to multiples of 20. 20
n = int((int(sys.argv[2])+19)/20)

import re
from mechanize import Browser
import ClientForm

def getmagicnumber(b):
  for i in range(16,0,-1):
    if re.compile("pgrBottom..ctl%d" % i).search(b.response().get_data()):
      return i
  return 0

b=Browser()
b.open("http://geocaching.com/seek/")
b.follow_link(text_regex="log in")
b.select_form(nr=0)
b["myUsername"] = USER
b["myPassword"] = PASS
b.submit()

magicnumber = 0 # the ctl number of Next. get only once

try: b.select_form("form4")
except: pass
b.select_form("form4")
b["origin_lat"] = lat
b["origin_long"] = lon
b["dist"] = maxdist
b.submit()

thresholdre = re.compile("Total Records: <b>([0-9]*)</b>")
m = thresholdre.search(b.response().get_data())
if m:
  if int(m.group(1)) > threshold:
    sys.stderr.write("THRESHOLD %d > %d\n" % (int(m.group(1)), threshold))
    sys.exit(4)
  else:
    records = int(m.group(1))
    sys.stderr.write("ok found %d, getting min(%d,%d) gcs\n" % (int(m.group(1)), int(records), int(sys.argv[2])))
else:
  print "can't find total records"
  sys.exit(0)

pages = 0
# (records+19)/20 is the max pages
for ii in range(min(n,(records+19)/20)):
  try:
    b.select_form(nr=0)
    b['CID'] = [i.name for i in b.find_control('CID').items]
    b.submit()
  except:
    break

  # only print one header, start of xml file
  lines = b.response().get_data().split("\n")
  if ii == 0:
    print "\n".join(lines[0:2])

  # core
  print "\n".join(lines[2:-1])

  print "</waypoint>"

  pages += 1
  sys.stderr.write("i")
  sys.stderr.flush()

  b.back()

  if not magicnumber:
    magicnumber = getmagicnumber(b)

  b.select_form(nr=0)
  [f for f in b.forms()][0].new_control("hidden", "pgrBottom$_ctl%d" % magicnumber, {})
  b.submit()

sys.stderr.write("\n")

if pages:
  print "</loc>"

#  f=open("delmeNOW","w")
#  f.write(b.response().get_data())
#  f.close()
